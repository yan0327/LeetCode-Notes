989. 数组形式的整数加法
https://leetcode-cn.com/problems/add-to-array-form-of-integer/
思路：
1.数组从个位开始[即从后往前计数]，用一个sum保存位和[加数+被加数+低位进位],一个pre保存进位
重新设置一个输出数组out。
2.数组从后往前遍历，每位与k%10相加、与低位进位相加，获得sum 。 sum%10加入数组，sum/10为进
位值，运算完记得把k/10.
3.若数组跑完k还有值或进位有值，则再跑一遍循环处理完剩余的数据
4.最后对整个数组首尾交换即可
```Go
代码：
func largestRectangleArea(heights []int) int {
    stack := []int{}
    N := len(heights)
    st, result := make([]int,N+2), 0
    for i:=0; i< N+2;i++{
        if i == 0 || i == N+1{
            st[i] = 0
        }else{
            st[i] = heights[i-1]
        }
    }
    for i:=0; i < N+2;i++{
        for len(stack) > 0 &&st[i] < st[stack[len(stack)-1]]{
            mid := stack[len(stack)-1]
            stack = stack[:len(stack)-1]
            w := i - stack[len(stack)-1] - 1
            h := st[mid]
            result = max(result, w*h)
        }
            stack = append(stack, i)
    }
    return result
}
```
func max(x, y int) int{
    if x > y{
        return x
    }else{
        return y
    }
}

时间复杂度:O(n)
空间复杂度:O(n)
